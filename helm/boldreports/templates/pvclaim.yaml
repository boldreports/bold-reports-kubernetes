{{- if or (eq .Values.clusterProvider "eks") (eq .Values.clusterProvider "ack") (eq .Values.clusterProvider "onpremise") }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    {{- include "boldreports.labels" . | nindent 4 }}
  {{- if eq .Values.clusterProvider "eks" }}
  name: {{ default "efs-sc" .Values.persistentVolume.eks.storageClass }}
  {{- else if eq .Values.clusterProvider "aks" }}
  name: azurefile-csi-nfs
  {{- else if eq .Values.clusterProvider "ack" }}
  name : alibabacloud-cnfs-nas
  {{- else if eq .Values.clusterProvider "onpremise" }}
  name: boldreports-storageclass
  {{- end }}
  {{- if eq .Release.Namespace "default" }}
  namespace: {{ .Values.namespace }}
  {{- else }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
{{- if eq .Values.clusterProvider "eks" }}
provisioner: efs.csi.aws.com
{{- else if eq .Values.clusterProvider "aks" }}
provisioner: file.csi.azure.com
{{- else if eq .Values.clusterProvider "ack" }}
provisioner: nasplugin.csi.alibabacloud.com
{{- else if eq .Values.clusterProvider "onpremise" }}
provisioner: kubernetes.io/no-provisioner
{{- end }}
{{- if eq .Values.clusterProvider "onpremise" }}
volumeBindingMode: WaitForFirstConsumer
{{- end }}
{{- if eq .Values.clusterProvider "aks" }}
allowVolumeExpansion: true
{{- end }}
{{- if eq .Values.clusterProvider "aks" }}
parameters:
  protocol: nfs
mountOptions:
  - nconnect=4
{{- else if and (eq .Values.clusterProvider "eks") (.Values.persistentVolume.eks.efsAccessPointId) }}
parameters:
  fileSystemId: {{ .Values.persistentVolume.eks.efsFileSystemId }}
  directoryPerms: "0777"
{{- end }}
---
{{- end }}
{{- if and (eq .Values.clusterProvider "aks") (.Values.persistentVolume.aks.fileShareName) (.Values.persistentVolume.aks.azureStorageAccountName) (.Values.persistentVolume.aks.azureStorageAccountKey) }}
apiVersion: v1
kind: Secret
metadata:
  labels:
    {{- include "boldreports.labels" . | nindent 4 }}
  {{- if .Values.persistentVolume.aks.secretName }}
  name: {{ .Values.persistentVolume.aks.secretName }}
  {{- else }}
  name: bold-services-azure-secret
  {{- end }}
  {{- if eq .Release.Namespace "default" }}
  namespace: {{ .Values.namespace }}
  {{- else }}
  namespace: {{ .Release.Namespace }}
  {{- end }}
type: Opaque
data:
  azurestorageaccountname: {{ .Values.persistentVolume.aks.azureStorageAccountName }}
  azurestorageaccountkey: {{ .Values.persistentVolume.aks.azureStorageAccountKey }}
---
{{- end }}
apiVersion: v1
kind: PersistentVolume
metadata:
 labels:
    {{- include "boldreports.labels" . | nindent 4 }}
 name: {{ .Values.persistentVolume.name }}
 {{- if eq .Release.Namespace "default" }}
 namespace: {{ .Values.namespace }}
 {{- else }}
 namespace: {{ .Release.Namespace }}
 {{- end }}
spec:
 capacity:
   storage: {{ .Values.persistentVolume.capacity }}
 accessModes:
 - ReadWriteMany
 {{- if or (eq .Values.clusterProvider "eks") (eq .Values.clusterProvider "aks") (eq .Values.clusterProvider "ack") }}
 persistentVolumeReclaimPolicy: Retain
 {{- end }}
 {{- if eq .Values.clusterProvider "ack" }}
 volumeMode: Filesystem
 {{- end }}
 {{- if eq .Values.clusterProvider "onpremise" }}
 storageClassName: boldreports-storageclass
 hostPath:
   path: "{{ .Values.persistentVolume.onpremise.hostPath }}"
{{- else if eq .Values.clusterProvider "eks" }}
 storageClassName: {{ default "efs-sc" .Values.persistentVolume.eks.storageClass }}
 csi:
   driver: efs.csi.aws.com
   volumeHandle: {{ .Values.persistentVolume.eks.efsFileSystemId }}{{- if .Values.persistentVolume.eks.efsAccessPointId }}::{{ .Values.persistentVolume.eks.efsAccessPointId }}{{- end }}
{{- if and (eq .Values.clusterProvider "eks") (.Values.persistentVolume.eks.efsAccessPointId) }}
 mountOptions:
  - rw
  - vers=4.1
{{- end }}
 {{- else if and (eq .Values.clusterProvider "aks") ( .Values.persistentVolume.aks.nfs.fileShareName ) }}
 storageClassName: azurefile-csi-nfs
 nfs:
  path: /{{ .Values.persistentVolume.aks.nfs.fileShareName }}
  server: {{ .Values.persistentVolume.aks.nfs.hostName }}
 {{- else if and (eq .Values.clusterProvider "aks") ( .Values.persistentVolume.aks.fileShareName ) }}
 storageClassName: azurefile
 azureFile:
   {{- if .Values.persistentVolume.aks.secretName }}
   secretName: {{ .Values.persistentVolume.aks.secretName }}
   {{- else }}
   secretName: bold-services-azure-secret
   {{- end }}
   shareName: {{ .Values.persistentVolume.aks.fileShareName }}
   readOnly: false
 {{- else if eq .Values.clusterProvider "gke" }}
 nfs:
   path: /{{ .Values.persistentVolume.gke.fileShareName }}
   server: {{ .Values.persistentVolume.gke.fileShareIp }}
 {{- else if eq .Values.clusterProvider "ack" }}
 storageClassName : alibabacloud-cnfs-nas
 csi:
   driver: nasplugin.csi.alibabacloud.com
   volumeHandle: {{ .Values.persistentVolume.name }}
   volumeAttributes:
        server: {{ .Values.persistentVolume.ack.serverName }}
        path: /{{ .Values.persistentVolume.ack.filePath }}
 mountOptions:
 - nolock,tcp,noresvport
 - vers=3
 {{- end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 labels:
    {{- include "boldreports.labels" . | nindent 4 }}
 name: {{ .Values.persistentVolume.name }}-claim
 {{- if eq .Release.Namespace "default" }}
 namespace: {{ .Values.namespace }}
 {{- else }}
 namespace: {{ .Release.Namespace }}
 {{- end }}
spec:
 accessModes:
 - ReadWriteMany
 {{- if eq .Values.clusterProvider "onpremise" }}
 storageClassName: boldreports-storageclass
 {{- else if eq .Values.clusterProvider "eks" }}
 storageClassName: efs-sc
 {{- else if eq .Values.clusterProvider "ack" }}
 storageClassName : alibabacloud-cnfs-nas
 {{- else if and (eq .Values.clusterProvider "aks") ( .Values.persistentVolume.aks.nfs.fileShareName ) }}
 storageClassName: azurefile-csi-nfs
 {{- else if and (eq .Values.clusterProvider "aks") ( .Values.persistentVolume.aks.fileShareName ) }}
 storageClassName: azurefile
 {{- else if eq .Values.clusterProvider "gke" }}
 storageClassName: ""
 {{- end }}
 volumeName: {{ .Values.persistentVolume.name }} 
 resources:
   requests:
     storage: {{ .Values.persistentVolume.capacity }}